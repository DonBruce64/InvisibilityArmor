package invisiblearmor;

import net.minecraft.client.renderer.entity.RenderPlayer;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.item.ItemArmor;
import net.minecraft.item.ItemStack;
import net.minecraftforge.client.event.DrawBlockHighlightEvent;
import net.minecraftforge.client.event.RenderPlayerEvent;
import net.minecraftforge.common.MinecraftForge;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.eventhandler.SubscribeEvent;
import cpw.mods.fml.common.registry.GameRegistry;

@Mod(modid = INV.MODID, name = INV.MODNAME, version = INV.MODVER)
public class INV {
	public static final String MODID="inv";
	public static final String MODNAME="Invisible Armor";
	public static final String MODVER="3.0.0";	
	private static final INV instance = new INV();
	private static ItemStack[] armorItems = new ItemStack[4];
	private static boolean headOveridden;

	@EventHandler
	public void PreInit(FMLPreInitializationEvent event){
		this.initModMetadata(event);
	}
	
	@EventHandler
	public void Init(FMLInitializationEvent event){
		MinecraftForge.EVENT_BUS.register(instance);
		for(byte i=0; i<4; ++i){
			GameRegistry.registerItem(new InvisibleArmor(i), "InvisibleArmor" + i);
		}
	}
	
	private void initModMetadata(FMLPreInitializationEvent event){
        ModMetadata meta = event.getModMetadata();
        meta.name = "Invisible Armor";
        meta.description = "Armor that makes you invisible.";
        meta.authorList.clear();
        meta.authorList.add("don_bruce");
        
        meta.modId = this.MODID;
        meta.version = this.MODVER;
        meta.autogenerated = false;
	}
	
	@SubscribeEvent
	public void on(DrawBlockHighlightEvent event){
		event.setCanceled(true);
	}
	
	@SubscribeEvent
	public void on(RenderPlayerEvent.Pre event){
		headOveridden = event.renderer.modelBipedMain.bipedHead.isHidden;
		ItemStack[] armorInv = event.entityPlayer.inventory.armorInventory;
		for(byte i=0; i<4; ++i){
			armorItems[i] = null;
			if(armorInv[i] != null){
				if(armorInv[i].getItem() instanceof InvisibleArmor){
					armorItems[i] = armorInv[i];
					armorInv[i] = null;
				}
			}else{
				setBodyPartVisibility(event.renderer, i, false);
			}
		}
	}
	
	@SubscribeEvent
	public void on(RenderPlayerEvent.Post event){
		for(byte i=0; i<4; ++i){
			if(armorItems[i] != null){
				event.entityPlayer.inventory.armorInventory[i] = armorItems[i];
				setBodyPartVisibility(event.renderer, i, true);
			}
		}
	}
	
	public static class InvisibleArmor extends ItemArmor{
		public InvisibleArmor(int type){
			super(ArmorMaterial.CLOTH, 0, type);
			switch(type){
				case(0):this.iconString = "chainmail_helmet"; break;
				case(1):this.iconString = "chainmail_chestplate"; break;
				case(2):this.iconString = "chainmail_leggings"; break;
				case(3):this.iconString = "chainmail_boots"; break;
			}
			switch(type){
				case(0):this.setUnlocalizedName("InvisibleArmor_Head"); break;
				case(1):this.setUnlocalizedName("InvisibleArmor_Body"); break;
				case(2):this.setUnlocalizedName("InvisibleArmor_Legs"); break;
				case(3):this.setUnlocalizedName("InvisibleArmor_Arms"); break;
			}
			this.setCreativeTab(CreativeTabs.tabCombat);
		}
	}
	
	private static void setBodyPartVisibility(RenderPlayer renderer, int armorType, boolean visibility){
		if(armorType == 3){
			if(!headOveridden){
				renderer.modelBipedMain.bipedHead.isHidden = visibility;
				renderer.modelBipedMain.bipedEars.isHidden = visibility;
				renderer.modelBipedMain.bipedHeadwear.isHidden = visibility;
			}
		}else if(armorType == 2){
			renderer.modelBipedMain.bipedBody.isHidden = visibility;
			renderer.modelBipedMain.bipedCloak.isHidden = visibility;
		}else if(armorType == 1){
			renderer.modelBipedMain.bipedLeftLeg.isHidden = visibility;
			renderer.modelBipedMain.bipedRightLeg.isHidden = visibility;
		}else if(armorType == 0){
			renderer.modelBipedMain.bipedLeftArm.isHidden = visibility;
			renderer.modelBipedMain.bipedRightArm.isHidden = visibility;
		}
	}
}
